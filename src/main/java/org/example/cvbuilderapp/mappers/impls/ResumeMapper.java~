package org.example.cvbuilderapp.mappers.impls;

import org.example.cvbuilderapp.dtos.resume.CreateResumeRequest;
import org.example.cvbuilderapp.dtos.resume.ResumeDto;
import org.example.cvbuilderapp.entities.*;
import org.example.cvbuilderapp.mappers.BaseMapper;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.ReportingPolicy;
import java.util.Collections;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

@Mapper(componentModel = "spring", unmappedTargetPolicy = ReportingPolicy.IGNORE)
public interface ResumeMapper extends BaseMapper<Resume, ResumeDto, CreateResumeRequest> {

    @Mapping(target = "user", source = "userId")
    Resume toEntity(CreateResumeRequest request);

    default User map(Long id) {
        if (id == null) return null;
        User user = new User();
        user.setId(id);
        return user;
    }

    @Mapping(target = "profileId", source = "profile.id")
    @Mapping(target = "objectiveId", source = "objective.id")
    @Mapping(target = "educationIds", expression = "java(mapIds(resume.getEducation()))")
    @Mapping(target = "experienceIds", expression = "java(mapIds(resume.getExperience()))")
    @Mapping(target = "skillIds", expression = "java(mapIds(resume.getSkill()))")
    @Mapping(target = "pursuitIds", expression = "java(mapIds(resume.getPursuit()))")
    @Mapping(target = "referenceIds", expression = "java(mapIds(resume.getReference()))")
    @Mapping(target = "accoladeIds", expression = "java(mapIds(resume.getAccolade()))")
    ResumeDto toDto(Resume resume);

    @Mapping(target = "profileId", source = "profile.id")
    @Mapping(target = "objectiveId", source = "objective.id")
    @Mapping(target = "educationIds", expression = "java(mapIds(resume.getEducation()))")
    @Mapping(target = "experienceIds", expression = "java(mapIds(resume.getExperience()))")
    @Mapping(target = "skillIds", expression = "java(mapIds(resume.getSkill()))")
    @Mapping(target = "pursuitIds", expression = "java(mapIds(resume.getPursuit()))")
    @Mapping(target = "referenceIds", expression = "java(mapIds(resume.getReference()))")
    @Mapping(target = "accoladeIds", expression = "java(mapIds(resume.getAccolade()))")
    List<ResumeDto> toDto(List<Resume> resume);


    default <T> List<Long> mapIds(List<T> entities) {
        if (entities == null) return Collections.emptyList();
        return entities.stream()
                .map(e -> {
                    try {
                        return (Long) e.getClass().getMethod("getId").invoke(e);
                    } catch (Exception ex) {
                        return null;
                    }
                })
                .filter(Objects::nonNull)
                .collect(Collectors.toList());
    }
}
